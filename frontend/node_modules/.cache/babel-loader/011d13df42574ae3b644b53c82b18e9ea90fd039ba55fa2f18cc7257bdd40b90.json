{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loppo\\\\Projets\\\\morestats\\\\frontend\\\\src\\\\components\\\\championDetails\\\\RuneRow.tsx\";\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RuneRow = ({\n  selectedRuneId,\n  row,\n  isKeystone\n}) => {\n  const baseURL = \"https://ddragon.leagueoflegends.com/cdn/img/\";\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"row\",\n      gap: 2,\n      justifyContent: \"space-evenly\",\n      mb: \"7%\",\n      pt: \"2%\",\n      children: row.map(rune => /*#__PURE__*/_jsxDEV(Box, {\n        component: \"img\",\n        src: baseURL + rune.icon,\n        alt: rune.name,\n        sx: {\n          width: isKeystone ? row.length == 3 ? \"25%\" : \"20%\" : \"12%\",\n          filter: selectedRuneId == rune.id ? \"none\" : \"grayscale(1)\",\n          color: \"#F0E6D2\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = RuneRow;\nexport default RuneRow;\nvar _c;\n$RefreshReg$(_c, \"RuneRow\");","map":{"version":3,"names":["React","Box","jsxDEV","_jsxDEV","RuneRow","selectedRuneId","row","isKeystone","baseURL","children","display","flexDirection","gap","justifyContent","mb","pt","map","rune","component","src","icon","alt","name","sx","width","length","filter","id","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/loppo/Projets/morestats/frontend/src/components/championDetails/RuneRow.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport { Rune } from \"../../types/Rune\";\r\n\r\ninterface RuneRowProps {\r\n  selectedRuneId: number;\r\n  row: Rune[];\r\n  isKeystone: boolean;\r\n}\r\nconst RuneRow: React.FC<RuneRowProps> = ({\r\n  selectedRuneId,\r\n  row,\r\n  isKeystone,\r\n}) => {\r\n  const baseURL = \"https://ddragon.leagueoflegends.com/cdn/img/\";\r\n  return (\r\n    <Box>\r\n      <Box\r\n        display={\"flex\"}\r\n        flexDirection=\"row\"\r\n        gap={2}\r\n        justifyContent={\"space-evenly\"}\r\n        mb={\"7%\"}\r\n        pt={\"2%\"}\r\n      >\r\n        {row.map((rune) => (\r\n          <Box\r\n            component=\"img\"\r\n            src={baseURL + rune.icon}\r\n            alt={rune.name}\r\n            sx={{\r\n              width: isKeystone ? (row.length == 3 ? \"25%\" : \"20%\") : \"12%\",\r\n              filter: selectedRuneId == rune.id ? \"none\" : \"grayscale(1)\",\r\n              color: \"#F0E6D2\",\r\n            }}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RuneRow;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQpC,MAAMC,OAA+B,GAAGA,CAAC;EACvCC,cAAc;EACdC,GAAG;EACHC;AACF,CAAC,KAAK;EACJ,MAAMC,OAAO,GAAG,8CAA8C;EAC9D,oBACEL,OAAA,CAACF,GAAG;IAAAQ,QAAA,eACFN,OAAA,CAACF,GAAG;MACFS,OAAO,EAAE,MAAO;MAChBC,aAAa,EAAC,KAAK;MACnBC,GAAG,EAAE,CAAE;MACPC,cAAc,EAAE,cAAe;MAC/BC,EAAE,EAAE,IAAK;MACTC,EAAE,EAAE,IAAK;MAAAN,QAAA,EAERH,GAAG,CAACU,GAAG,CAAEC,IAAI,iBACZd,OAAA,CAACF,GAAG;QACFiB,SAAS,EAAC,KAAK;QACfC,GAAG,EAAEX,OAAO,GAAGS,IAAI,CAACG,IAAK;QACzBC,GAAG,EAAEJ,IAAI,CAACK,IAAK;QACfC,EAAE,EAAE;UACFC,KAAK,EAAEjB,UAAU,GAAID,GAAG,CAACmB,MAAM,IAAI,CAAC,GAAG,KAAK,GAAG,KAAK,GAAI,KAAK;UAC7DC,MAAM,EAAErB,cAAc,IAAIY,IAAI,CAACU,EAAE,GAAG,MAAM,GAAG,cAAc;UAC3DC,KAAK,EAAE;QACT;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GA/BI7B,OAA+B;AAiCrC,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}