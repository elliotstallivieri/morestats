{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loppo\\\\Projets\\\\morestats\\\\frontend\\\\src\\\\components\\\\championDetails\\\\StatMods.tsx\";\nimport React from \"react\";\nimport { Box } from \"@mui/material\";\nimport RuneRow from \"./RuneRow\";\nimport { toRuneFormat } from \"../../utils/RuneFormatter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Runes = ({\n  selectedRuneId\n}) => {\n  // THIS IS A TEMPORARY SOLUTION\n  // a cleaner but still not perfect solution would be to create a new json file with the stat mods\n  const runeList = [[toRuneFormat(5008, \"StatModsAdaptiveForceIcon.png\".toLowerCase(), \"adap\", 0, \"StatMods\"), toRuneFormat(5007, \"StatModsCDRScalingIcon.png\".toLowerCase(), \"CDR\", 0, \"StatMods\"), toRuneFormat(5005, \"StatModsAttackSpeedIcon.png\".toLowerCase(), \"AS\", 0, \"StatMods\")], [toRuneFormat(5008, \"StatModsAdaptiveForceIcon.png\".toLowerCase(), \"adap\", 0, \"StatMods\"), toRuneFormat(5007, \"statmodsmovementspeedicon.png\".toLowerCase(), \"CDR\", 0, \"StatMods\"), toRuneFormat(5005, \"statmodshealthplusicon.png\".toLowerCase(), \"AS\", 0, \"StatMods\")], [toRuneFormat(5011, \"statmodshealthscalingicon.png\".toLowerCase(), \"adap\", 0, \"StatMods\"), toRuneFormat(5007, \"statmodstenacityicon.png\".toLowerCase(), \"CDR\", 0, \"StatMods\"), toRuneFormat(5005, \"statmodshealthplusicon.png\".toLowerCase(), \"AS\", 0, \"StatMods\")]];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: runeList.map((rune, index) => /*#__PURE__*/_jsxDEV(RuneRow, {\n      selectedRuneId: selectedRuneId[index],\n      row: rune,\n      isKeystone: false\n    }, rune[0].id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_c = Runes;\nexport default Runes;\n\n/*\r\n3 lignes : offense, flex, def\r\n3 slots par ligne\r\n=> faire une map de 3x3 avec juste les icones pour l'instant\r\n=> appeler cette map avec un .map\r\n  console.log(\r\n    \"TEST ICI\",\r\n    statmodo.filter((element) => element.id < 7000)\r\n  );\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Runes\");","map":{"version":3,"names":["React","Box","RuneRow","toRuneFormat","jsxDEV","_jsxDEV","Runes","selectedRuneId","runeList","toLowerCase","children","map","rune","index","row","isKeystone","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/loppo/Projets/morestats/frontend/src/components/championDetails/StatMods.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport RuneRow from \"./RuneRow\";\r\nimport { toRuneFormat } from \"../../utils/RuneFormatter\";\r\n\r\ninterface StatModsProps {\r\n  selectedRuneId: number[];\r\n}\r\n\r\nconst Runes: React.FC<StatModsProps> = ({ selectedRuneId }) => {\r\n  // THIS IS A TEMPORARY SOLUTION\r\n  // a cleaner but still not perfect solution would be to create a new json file with the stat mods\r\n  const runeList = [\r\n    [\r\n      toRuneFormat(\r\n        5008,\r\n        \"StatModsAdaptiveForceIcon.png\".toLowerCase(),\r\n        \"adap\",\r\n        0,\r\n        \"StatMods\"\r\n      ),\r\n      toRuneFormat(\r\n        5007,\r\n        \"StatModsCDRScalingIcon.png\".toLowerCase(),\r\n        \"CDR\",\r\n        0,\r\n        \"StatMods\"\r\n      ),\r\n      toRuneFormat(\r\n        5005,\r\n        \"StatModsAttackSpeedIcon.png\".toLowerCase(),\r\n        \"AS\",\r\n        0,\r\n        \"StatMods\"\r\n      ),\r\n    ],\r\n    [\r\n      toRuneFormat(\r\n        5008,\r\n        \"StatModsAdaptiveForceIcon.png\".toLowerCase(),\r\n        \"adap\",\r\n        0,\r\n        \"StatMods\"\r\n      ),\r\n      toRuneFormat(\r\n        5007,\r\n        \"statmodsmovementspeedicon.png\".toLowerCase(),\r\n        \"CDR\",\r\n        0,\r\n        \"StatMods\"\r\n      ),\r\n      toRuneFormat(\r\n        5005,\r\n        \"statmodshealthplusicon.png\".toLowerCase(),\r\n        \"AS\",\r\n        0,\r\n        \"StatMods\"\r\n      ),\r\n    ],\r\n    [\r\n      toRuneFormat(\r\n        5011,\r\n        \"statmodshealthscalingicon.png\".toLowerCase(),\r\n        \"adap\",\r\n        0,\r\n        \"StatMods\"\r\n      ),\r\n      toRuneFormat(\r\n        5007,\r\n        \"statmodstenacityicon.png\".toLowerCase(),\r\n        \"CDR\",\r\n        0,\r\n        \"StatMods\"\r\n      ),\r\n      toRuneFormat(\r\n        5005,\r\n        \"statmodshealthplusicon.png\".toLowerCase(),\r\n        \"AS\",\r\n        0,\r\n        \"StatMods\"\r\n      ),\r\n    ],\r\n  ];\r\n\r\n  return (\r\n    <Box>\r\n      {runeList.map((rune, index) => (\r\n        <RuneRow\r\n          key={rune[0].id}\r\n          selectedRuneId={selectedRuneId[index]}\r\n          row={rune}\r\n          isKeystone={false}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Runes;\r\n\r\n/*\r\n3 lignes : offense, flex, def\r\n3 slots par ligne\r\n=> faire une map de 3x3 avec juste les icones pour l'instant\r\n=> appeler cette map avec un .map\r\n  console.log(\r\n    \"TEST ICI\",\r\n    statmodo.filter((element) => element.id < 7000)\r\n  );\r\n*/\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAoB,eAAe;AAC/C,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,YAAY,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMzD,MAAMC,KAA8B,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAC7D;EACA;EACA,MAAMC,QAAQ,GAAG,CACf,CACEL,YAAY,CACV,IAAI,EACJ,+BAA+B,CAACM,WAAW,CAAC,CAAC,EAC7C,MAAM,EACN,CAAC,EACD,UACF,CAAC,EACDN,YAAY,CACV,IAAI,EACJ,4BAA4B,CAACM,WAAW,CAAC,CAAC,EAC1C,KAAK,EACL,CAAC,EACD,UACF,CAAC,EACDN,YAAY,CACV,IAAI,EACJ,6BAA6B,CAACM,WAAW,CAAC,CAAC,EAC3C,IAAI,EACJ,CAAC,EACD,UACF,CAAC,CACF,EACD,CACEN,YAAY,CACV,IAAI,EACJ,+BAA+B,CAACM,WAAW,CAAC,CAAC,EAC7C,MAAM,EACN,CAAC,EACD,UACF,CAAC,EACDN,YAAY,CACV,IAAI,EACJ,+BAA+B,CAACM,WAAW,CAAC,CAAC,EAC7C,KAAK,EACL,CAAC,EACD,UACF,CAAC,EACDN,YAAY,CACV,IAAI,EACJ,4BAA4B,CAACM,WAAW,CAAC,CAAC,EAC1C,IAAI,EACJ,CAAC,EACD,UACF,CAAC,CACF,EACD,CACEN,YAAY,CACV,IAAI,EACJ,+BAA+B,CAACM,WAAW,CAAC,CAAC,EAC7C,MAAM,EACN,CAAC,EACD,UACF,CAAC,EACDN,YAAY,CACV,IAAI,EACJ,0BAA0B,CAACM,WAAW,CAAC,CAAC,EACxC,KAAK,EACL,CAAC,EACD,UACF,CAAC,EACDN,YAAY,CACV,IAAI,EACJ,4BAA4B,CAACM,WAAW,CAAC,CAAC,EAC1C,IAAI,EACJ,CAAC,EACD,UACF,CAAC,CACF,CACF;EAED,oBACEJ,OAAA,CAACJ,GAAG;IAAAS,QAAA,EACDF,QAAQ,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBR,OAAA,CAACH,OAAO;MAENK,cAAc,EAAEA,cAAc,CAACM,KAAK,CAAE;MACtCC,GAAG,EAAEF,IAAK;MACVG,UAAU,EAAE;IAAM,GAHbH,IAAI,CAAC,CAAC,CAAC,CAACI,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAvFIf,KAA8B;AAyFpC,eAAeA,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}