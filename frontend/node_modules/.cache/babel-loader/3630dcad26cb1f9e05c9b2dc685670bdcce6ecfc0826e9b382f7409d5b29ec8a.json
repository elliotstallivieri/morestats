{"ast":null,"code":"//import { useQuery } from '@tanstack/react-query';\nimport { getPlayerGameDataExample } from \"../../static_data/StatistshipData\";\nimport { getGamesStats } from \"../../utils/calculators/getGamesStats\";\n// ad params for filtering the games : opponents, specific champ, etc.\n\nfunction usePagePlayerDetails(options = {}) {\n  const {\n    playerId\n  } = options;\n  console.log(\"--PAGE--Player data:\", playerId);\n  const gameData = getPlayerGameDataExample(); //TODO: replace with real API call\n\n  const calculatedStats = getGamesStats(gameData);\n  return {\n    playerStats: calculatedStats[0],\n    gameCount: gameData.length\n  };\n}\nexport default usePagePlayerDetails;\n/*  type Filters = {\r\n    opponent?: string;\r\n    champion?: string;\r\n    competition?: string;\r\n  };\r\n\r\n  type State = {\r\n    filters: Filters;\r\n    filteredGames: Game[];\r\n    winrate: number;\r\n  };\r\n  type Action =\r\n    | { type: \"SET_GAMES\"; payload: Game[] }\r\n    | { type: \"SET_FILTERS\"; payload: Filters };\r\n*/","map":{"version":3,"names":["getPlayerGameDataExample","getGamesStats","usePagePlayerDetails","options","playerId","console","log","gameData","calculatedStats","playerStats","gameCount","length"],"sources":["C:/Users/loppo/Projets/morestats/frontend/src/pages/statistships/usePagePlayerDetails.ts"],"sourcesContent":["//import { useQuery } from '@tanstack/react-query';\r\nimport { getPlayerGameDataExample } from \"../../static_data/StatistshipData\";\r\nimport { Game } from \"../../types/Game\";\r\nimport { getGamesStats } from \"../../utils/calculators/getGamesStats\";\r\n\r\ninterface usePagePlayerDetailsProps {\r\n  playerId?: number;\r\n  event?: string;\r\n}\r\n// ad params for filtering the games : opponents, specific champ, etc.\r\n\r\nfunction usePagePlayerDetails(\r\n  options: Partial<usePagePlayerDetailsProps> = {}\r\n): {\r\n  playerStats: Game;\r\n  gameCount: number;\r\n} {\r\n  const { playerId } = options;\r\n  console.log(\"--PAGE--Player data:\", playerId);\r\n\r\n  const gameData = getPlayerGameDataExample(); //TODO: replace with real API call\r\n\r\n  const calculatedStats = getGamesStats(gameData as Game[]);\r\n\r\n  return { playerStats: calculatedStats[0], gameCount: gameData.length };\r\n}\r\n\r\nexport default usePagePlayerDetails;\r\n/*  type Filters = {\r\n    opponent?: string;\r\n    champion?: string;\r\n    competition?: string;\r\n  };\r\n\r\n  type State = {\r\n    filters: Filters;\r\n    filteredGames: Game[];\r\n    winrate: number;\r\n  };\r\n  type Action =\r\n    | { type: \"SET_GAMES\"; payload: Game[] }\r\n    | { type: \"SET_FILTERS\"; payload: Filters };\r\n*/\r\n"],"mappings":"AAAA;AACA,SAASA,wBAAwB,QAAQ,mCAAmC;AAE5E,SAASC,aAAa,QAAQ,uCAAuC;AAMrE;;AAEA,SAASC,oBAAoBA,CAC3BC,OAA2C,GAAG,CAAC,CAAC,EAIhD;EACA,MAAM;IAAEC;EAAS,CAAC,GAAGD,OAAO;EAC5BE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,QAAQ,CAAC;EAE7C,MAAMG,QAAQ,GAAGP,wBAAwB,CAAC,CAAC,CAAC,CAAC;;EAE7C,MAAMQ,eAAe,GAAGP,aAAa,CAACM,QAAkB,CAAC;EAEzD,OAAO;IAAEE,WAAW,EAAED,eAAe,CAAC,CAAC,CAAC;IAAEE,SAAS,EAAEH,QAAQ,CAACI;EAAO,CAAC;AACxE;AAEA,eAAeT,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}