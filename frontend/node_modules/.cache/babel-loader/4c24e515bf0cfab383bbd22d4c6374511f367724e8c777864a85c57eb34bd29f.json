{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loppo\\\\Projets\\\\morestats\\\\frontend\\\\src\\\\components\\\\championDetails\\\\StatMods.tsx\";\nimport React from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport RuneRow from \"./RuneRow\";\nimport { toRuneFormat } from \"../../utils/RuneFormatter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Runes = ({\n  selectedRuneId\n}) => {\n  const runeList = [toRuneFormat(5008, \"StatModsAdaptiveForceIcon.png\".toLowerCase(), \"adap\", 0, \"StatMods\"), toRuneFormat(5007, \"StatModsCDRScalingIcon.png\", \"CDR\", 0, \"StatMods\"), toRuneFormat(5005, \"StatModsAttackSpeedIcon.png\", \"AS\", 0, \"StatMods\")];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      border: \"1px solid #ccc\",\n      p: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: \"Runes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RuneRow, {\n      isKeystone: false,\n      selectedRuneId: selectedRuneId[0],\n      row: runeList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Runes;\nexport default Runes;\n\n/*\r\n3 lignes : offense, flex, def\r\n3 slots par ligne\r\n=> faire une map de 3x3 avec juste les icones pour l'instant\r\n=> appeler cette map avec un .map\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Runes\");","map":{"version":3,"names":["React","Box","Typography","RuneRow","toRuneFormat","jsxDEV","_jsxDEV","Runes","selectedRuneId","runeList","toLowerCase","sx","border","p","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","isKeystone","row","_c","$RefreshReg$"],"sources":["C:/Users/loppo/Projets/morestats/frontend/src/components/championDetails/StatMods.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport RuneRow from \"./RuneRow\";\r\nimport { toRuneFormat } from \"../../utils/RuneFormatter\";\r\n\r\ninterface StatModsProps {\r\n  selectedRuneId: number[];\r\n}\r\n\r\nconst Runes: React.FC<StatModsProps> = ({ selectedRuneId }) => {\r\n  const runeList = [\r\n    toRuneFormat(5008, (\"StatModsAdaptiveForceIcon.png\").toLowerCase(), \"adap\", 0, \"StatMods\"),\r\n    toRuneFormat(5007, \"StatModsCDRScalingIcon.png\", \"CDR\", 0, \"StatMods\"),\r\n    toRuneFormat(5005, \"StatModsAttackSpeedIcon.png\", \"AS\", 0, \"StatMods\"),\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ border: \"1px solid #ccc\", p: 1 }}>\r\n      <Typography variant=\"subtitle1\">Runes</Typography>\r\n      <RuneRow\r\n        isKeystone={false}\r\n        selectedRuneId={selectedRuneId[0]}\r\n        row={runeList}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Runes;\r\n\r\n/*\r\n3 lignes : offense, flex, def\r\n3 slots par ligne\r\n=> faire une map de 3x3 avec juste les icones pour l'instant\r\n=> appeler cette map avec un .map\r\n\r\n*/\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,YAAY,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMzD,MAAMC,KAA8B,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAC7D,MAAMC,QAAQ,GAAG,CACfL,YAAY,CAAC,IAAI,EAAG,+BAA+B,CAAEM,WAAW,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,UAAU,CAAC,EAC1FN,YAAY,CAAC,IAAI,EAAE,4BAA4B,EAAE,KAAK,EAAE,CAAC,EAAE,UAAU,CAAC,EACtEA,YAAY,CAAC,IAAI,EAAE,6BAA6B,EAAE,IAAI,EAAE,CAAC,EAAE,UAAU,CAAC,CACvE;EAED,oBACEE,OAAA,CAACL,GAAG;IAACU,EAAE,EAAE;MAAEC,MAAM,EAAE,gBAAgB;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAC1CR,OAAA,CAACJ,UAAU;MAACa,OAAO,EAAC,WAAW;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAClDb,OAAA,CAACH,OAAO;MACNiB,UAAU,EAAE,KAAM;MAClBZ,cAAc,EAAEA,cAAc,CAAC,CAAC,CAAE;MAClCa,GAAG,EAAEZ;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACG,EAAA,GAjBIf,KAA8B;AAmBpC,eAAeA,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}