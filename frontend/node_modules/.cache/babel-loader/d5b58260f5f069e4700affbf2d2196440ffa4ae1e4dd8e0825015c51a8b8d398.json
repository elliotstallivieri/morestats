{"ast":null,"code":"import itemData from \"./../data/items.json\";\n\n// Define the type of the items in itemData\n\nfunction getItem(id) {\n  var _itemData$id$toString;\n  const toto = itemData[\"1001\"].name;\n  console.log(\"itemData[1001] : \", toto);\n  let item = {\n    id: id,\n    /*     name: \"nom\",\r\n    description: \"description\",\r\n    icon: \"icon\", */\n    name: ((_itemData$id$toString = itemData[id === null || id === void 0 ? void 0 : id.toString()]) === null || _itemData$id$toString === void 0 ? void 0 : _itemData$id$toString.name) || \"\",\n    description: itemData[id.toString()].simpleDescription,\n    icon: itemData[id.toString()].icon\n  };\n\n  /*   for (let i = 0; i < items.length; i++) {\r\n    if (items[i].id === id) {\r\n        item.description = items[i].simpleDescription;\r\n        item.icon = items[i].icon;\r\n        item.name = items[i].name; */\n  return item;\n}\nexport default getItem;","map":{"version":3,"names":["itemData","getItem","id","_itemData$id$toString","toto","name","console","log","item","toString","description","simpleDescription","icon"],"sources":["C:/Users/loppo/Projets/morestats/frontend/src/utils/Items/getItem.ts"],"sourcesContent":["import itemData from \"./../data/items.json\";\r\nimport { Item } from \"../../types/Item\";\r\n\r\n// Define the type of the items in itemData\r\ninterface ItemData {\r\n    name: string;\r\n    id: number;\r\n    tier: number;\r\n    rank: string[];\r\n    buildsFrom: number[];\r\n    buildsInto: number[];\r\n    specialRecipe: number;\r\n    noEffects: boolean;\r\n    removed: boolean;\r\n    requiredChampion: string;\r\n    requiredAlly: string;\r\n    simpleDescription: string;\r\n    icon: string;\r\n    iconOverlay: boolean;\r\n  }\r\n\r\nfunction getItem(id: number): Item {\r\n  const toto = itemData[\"1001\"].name;\r\n  console.log(\"itemData[1001] : \", toto);\r\n  let item: Item = {\r\n    id: id,\r\n    /*     name: \"nom\",\r\n    description: \"description\",\r\n    icon: \"icon\", */\r\n    name: itemData[id?.toString()]?.name || \"\",\r\n    description: itemData[id.toString()].simpleDescription,\r\n    icon: itemData[id.toString()].icon,\r\n  };\r\n\r\n  /*   for (let i = 0; i < items.length; i++) {\r\n    if (items[i].id === id) {\r\n        item.description = items[i].simpleDescription;\r\n        item.icon = items[i].icon;\r\n        item.name = items[i].name; */\r\n  return item;\r\n}\r\n\r\nexport default getItem;\r\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,sBAAsB;;AAG3C;;AAkBA,SAASC,OAAOA,CAACC,EAAU,EAAQ;EAAA,IAAAC,qBAAA;EACjC,MAAMC,IAAI,GAAGJ,QAAQ,CAAC,MAAM,CAAC,CAACK,IAAI;EAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;EACtC,IAAII,IAAU,GAAG;IACfN,EAAE,EAAEA,EAAE;IACN;AACJ;AACA;IACIG,IAAI,EAAE,EAAAF,qBAAA,GAAAH,QAAQ,CAACE,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEO,QAAQ,CAAC,CAAC,CAAC,cAAAN,qBAAA,uBAAxBA,qBAAA,CAA0BE,IAAI,KAAI,EAAE;IAC1CK,WAAW,EAAEV,QAAQ,CAACE,EAAE,CAACO,QAAQ,CAAC,CAAC,CAAC,CAACE,iBAAiB;IACtDC,IAAI,EAAEZ,QAAQ,CAACE,EAAE,CAACO,QAAQ,CAAC,CAAC,CAAC,CAACG;EAChC,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,OAAOJ,IAAI;AACb;AAEA,eAAeP,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}